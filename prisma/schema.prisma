// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  firstName          String
  lastName           String
  userName           String               @unique
  email              String               @unique
  password           String
  profileImgURL      String?              @unique
  roleType           Role                 @default(BASIC_USER)
  UserScore          UserScore[]
  UserParticipant    UserParticipant[]
  UserQuestionAnswer UserQuestionAnswer[]

  @@index([email, userName])
}

model UserScore {
  id     Int    @id @default(autoincrement())
  userId String
  quizId String
  score  Int
  user   User?  @relation(fields: [userId], references: [id])
  quiz   Quiz?  @relation(fields: [quizId], references: [id])

  @@unique([id, userId, quizId])
}

model UserParticipant {
  id     Int    @id @default(autoincrement())
  userId String
  quizId String
  user   User?  @relation(fields: [userId], references: [id])
  quiz   Quiz?  @relation(fields: [quizId], references: [id])

  @@unique([id, userId, quizId])
}

model UserQuestionAnswer {
  id            Int       @id @default(autoincrement())
  userId        String
  quizId        String
  questionId    Int
  correctAnswer Boolean   @default(false)
  user          User?     @relation(fields: [userId], references: [id])
  quiz          Quiz?     @relation(fields: [quizId], references: [id])
  question      Question? @relation(fields: [questionId], references: [id])

  @@unique([id, userId, quizId, questionId])
}

model Category {
  id   Int    @id
  name String @unique
  Quiz Quiz[]
}

model Question {
  id                 Int                  @id @default(autoincrement())
  quizId             String               @unique
  question           String
  correctAnswer      String
  incorrectAnswers   Json
  UserQuestionAnswer UserQuestionAnswer[]
  Quiz               Quiz[]

  @@unique([id, quizId])
}

model Quiz {
  id                 String               @id @default(uuid())
  name               String
  answerType         AnswerType           @default(multiple)
  difficulty         Difficulty           @default(easy)
  startDate          DateTime
  endDate            DateTime?
  questionList       Json
  scoreList          Json
  categoryId         Int
  category           Category?            @relation(fields: [categoryId], references: [id])
  questionId         Int
  question           Question?            @relation(fields: [questionId], references: [id])
  UserScore          UserScore[]
  UserParticipant    UserParticipant[]
  UserQuestionAnswer UserQuestionAnswer[]

  @@unique([id, categoryId, name])
}

enum Role {
  BASIC_USER
  ADMIN_USER
}

enum Difficulty {
  easy
  medium
  hard
}

enum AnswerType {
  boolean
  multiple
}
